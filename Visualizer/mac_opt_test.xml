<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int NR_NODES = 4;

typedef int[0, NR_NODES-1] id_t;

broadcast chan sendB[NR_NODES];</declaration>
	<template>
		<name x="5" y="5">node</name>
		<declaration>// Place local declarations here.
bool moreToSend = true;
int nextId = -1;
int sendId = -1;
int connected[NR_NODES] = {0, 2, -1, -1};
void setNextId() {
    nextId++;
    sendId = connected[nextId];
    if(sendId == -1)
        moreToSend = false;
}</declaration>
		<location id="id0" x="-391" y="-348">
			<committed/>
		</location>
		<location id="id1" x="-93" y="-348">
		</location>
		<location id="id2" x="-391" y="-246">
			<committed/>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-280" y="-348">!moreToSend</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="assignment" x="-382" y="-306">setNextId()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-586" y="-391">moreToSend</label>
			<label kind="synchronisation" x="-586" y="-374">sendB[sendId]!</label>
			<nail x="-629" y="-348"/>
			<nail x="-629" y="-246"/>
			<nail x="-527" y="-246"/>
		</transition>
	</template>
	<template>
		<name>rec</name>
		<parameter>id_t id</parameter>
		<location id="id3" x="144" y="0">
		</location>
		<location id="id4" x="0" y="0">
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="34" y="-34">sendB[id]?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// List one or more processes to be composed into a system.
system node, rec;</system>
	<queries>
	</queries>
</nta>
